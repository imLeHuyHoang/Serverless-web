name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@18.141.57.31 << 'EOF'

            # 1. Kiểm tra Docker. Nếu chưa cài, cài đặt Docker.
            if ! command -v docker &> /dev/null
            then
              echo "Docker not found. Installing..."
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "Docker is already installed:"
              docker --version
            fi

            # 2. Kiểm tra Docker Compose. Nếu chưa cài, cài đặt Docker Compose.
            if ! command -v docker-compose &> /dev/null
            then
              echo "Docker Compose not found. Installing..."
              # Using apt to install Docker Compose instead of curl
              sudo apt-get update
              sudo apt-get install -y docker-compose-plugin
              # Create a symbolic link for backward compatibility
              sudo ln -sf /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
              # Make sure it's executable
              sudo chmod +x /usr/local/bin/docker-compose
            else
              echo "Docker Compose is already installed:"
              docker-compose --version
            fi

            # 3. Install Node.js if not present
            if ! command -v node &> /dev/null
            then
              echo "Node.js not found. Installing..."
              sudo apt-get update
              sudo apt-get install -y ca-certificates curl gnupg
              sudo mkdir -p /etc/apt/keyrings
              curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
              echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
              sudo apt-get update
              sudo apt-get install -y nodejs
              echo "Node.js installed:"
              node --version
              npm --version
            else
              echo "Node.js is already installed:"
              node --version
            fi

            # 4. Nếu thư mục dự án chưa tồn tại, clone mới. Nếu tồn tại rồi, chỉ cần pull.
            cd ~
            if [ ! -d "Serverless-web" ]; then
              echo "Cloning repository..."
              git clone https://github.com/imLeHuyHoang/Serverless-web.git
              cd Serverless-web
            else
              echo "Repository already exists. Pulling latest..."
              cd Serverless-web
              git pull origin main
            fi

            # 5. Kiểm tra xem docker-compose tồn tại không trước khi sử dụng
            if command -v docker-compose &> /dev/null; then
              # Dừng và xóa container cũ trước khi chạy container mới
              echo "Stopping old containers..."
              sudo docker-compose down --volumes --remove-orphans || true
            else
              echo "Using docker compose plugin instead of docker-compose"
            fi

            # 6. Chạy npm run test để kiểm tra mã nguồn trước khi build.
            echo "Running tests..."
            npm install
            npm run test || echo "Tests failed but continuing deployment"

            # 7. Build và chạy container mới - sử dụng cú pháp linh hoạt
            echo "Building and starting new container..."
            if command -v docker-compose &> /dev/null; then
              sudo docker-compose up -d --build
            else
              # Sử dụng docker compose plugin nếu docker-compose không tồn tại
              sudo docker compose up -d --build
            fi

            echo "Done!"
          EOF
